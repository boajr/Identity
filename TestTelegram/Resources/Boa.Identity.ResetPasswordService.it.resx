<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="/register" xml:space="preserve">
    <value>/register</value>
    <comment>Telegram: Comando usato per avviare la procedura di registrazione</comment>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annulla</value>
    <comment>Telegram: Testo che compare sul tasto per annullare l'invio della scheda di contatto</comment>
  </data>
  <data name="Please post your contact card to be identified" xml:space="preserve">
    <value>Posta il tuo contatto per essere riconosciuto</value>
    <comment>Telegram: Testo del messaggio inviato in risposta al comando /register</comment>
  </data>
  <data name="Please reset your password by &lt;a href='{0}'&gt;clicking here&lt;/a&gt;." xml:space="preserve">
    <value>Ripristina la tua password &lt;a href='{0}'&gt;cliccando qui&lt;/a&gt;.</value>
    <comment>Mail: Corpo della mail inviata agli utenti per il ripristino della password</comment>
  </data>
  <data name="Reply to this message with new password" xml:space="preserve">
    <value>Rispondi a questo messaggio con la nuova password</value>
    <comment>Telegram: Testo del messaggio inviato all'utente per il ripristino della password</comment>
  </data>
  <data name="Reset Password" xml:space="preserve">
    <value>Ripristino password</value>
    <comment>Mail: Oggetto della mail inviata agli utenti per il ripristino della password</comment>
  </data>
  <data name="Send&#xD;&#xA;CONTACT CARD" xml:space="preserve">
    <value>Invia
CONTATTO</value>
    <comment>Telegram: Testo che compare sul tasto per inviare la scheda di contatto</comment>
  </data>
  <data name="This contact card does not contain the phone number!&#xD;&#xA;Please post one with the correct value" xml:space="preserve">
    <value>Questo contatto non contiene il numero di telefono!
Inviane uno con tutti i campi compilati</value>
    <comment>Telegram: Testo del messaggio inviato se l'utente invia un contatto senza il numero di telefono</comment>
  </data>
  <data name="This isn't your contact card!&#xD;&#xA;Please post the right one" xml:space="preserve">
    <value>Questo non è il tuo contatto!
Invia quello corretto</value>
    <comment>Telegram: Testo del messaggio inviato se l'utente fa il furbo e invia il contatto di qualcun altro</comment>
  </data>
  <data name="Unknown user!&#xD;&#xA;Please post your contact card to be identified" xml:space="preserve">
    <value>Utente non trovato!
Posta il tuo contatto per essere riconosciuto</value>
    <comment>Telegram: Testo del messaggio inviato se l'id telegram non viene trovato</comment>
  </data>
  <data name="User updated successfully" xml:space="preserve">
    <value>Utente aggiornato correttamente</value>
  </data>
  <data name="Your password has been reset" xml:space="preserve">
    <value>Password ripristinata correttamente</value>
    <comment>Telegram: Testo del messaggio inviato dopo il ripristino della password</comment>
  </data>
  <data name="Your phone number is not in the user list!" xml:space="preserve">
    <value>Il tuo numero di telefono non è presente nel registro degli utenti!</value>
    <comment>Telegram: Testo del messaggio inviato se il numero di cellulare dell'utente non viene trovato</comment>
  </data>
</root>